-------------------------------------------------------------------------------------------------------
// o que e GitOps:

 - GitOps é uma abordagem para o gerenciamento de infrastrutura e aplicativos
 baseada no uso do Git como fonte única e de verdade (single source of truth)
 para definir e controlar o estado desejado do sistema.
 -> Principios do GitOps:
 -Fonte Unica de Verdade:

    O repositorio Git é a unica fonte de verdade
    para o estado desejado do sistema. todas as 
    alterações devem ser refletidas nos arquivos
    YAML do repositorio Git.

 -Automação:

    Qual a ideia da Automação!
    O estado do sistema e mantido automaticamente em conformidade com o estado desejado
    definido nos arquivos YAML do repositorio GIT. As ferramentas de automação monitoram
    continuamente o repositorio Git e aplicam alterações necessarias no sistema.

 -Sincronização Continua:
    O estado atual do sistema sincronizado continuamente com o estado
    desejado do repositorio Git. Qualquer desvio entre  os dois e detectado e corrigido
    automaticamente.

 -Revisão de CÓdigo e Elaboração:

    A partir do momento que esta tudo dentro do Git, vamos trabalhar com algumas Branchs.
    - Se alguem fizer alguma alteração, eu posso habilitar o recurso de aprovação:
    Por exemplo: fiz uma alteração em uma branch, ai vou fazer um merge para
     uma branch de Dev por exemplo.

     - Esse merge será aplicado apos a Aprovação.
     - garante a transparencia e a colaboração dentro do Ambiente (enviroment);
     As alterações nos arquivos YAML passam por revisões de codigo, e são 
     colaborativamente revisadas pela equipe antes de serem mescladas no repositorio
     Git. Isso garante uma abordagem baseada em praticas de DevOps e promove a 
     transparencia e a colaboração.

 -Observabilidade:
    O GitOps enfatiza a Observabilidade do sistema, permitindo monitorar e registrar o estado atual
    do sistema, bem como as alterações aplicadas. Isso facilita a solução de problemas e a auditoria
    das alterações realizadas.

Ferramentas do GitOps:

    -> ArgoCD
    -> FluxX
    -> Jenkings X 
    -> etc
--------------------------------------------------------------------------------------------------------
 // O que e Argo CD:

    O Argo CD, nada mais e que uma ferramenta de entrega continua para o Kubernetes.
    - O CI faremos em outra ferramenta, e elas vão se integrar através dos repositorios.
    Utiliza um repositorio Git como fonte de configuração e gerencia o ciclo de vida
    das aplicações de forma declarativa, garantindo que o estado atual do cluster corresponda
    ao estado atual desejado definido nos arquivos YAML.

 // Conceitos Principais do Argo CD ou  especificos relacionados:
 - O argo CD ele e um Operator, quando fazemos o deploy no cluster kubernetes ele cria uns CRD - Custom Resource Definition.
-Cuidado: App e o microserviço, e sua aplicação que vc vai fazer o deploy dentro do cluster.
Os Applications dentro do Argo CD, nada mais e que um Custom Resource Definition (CRD) - Grupo de recursos do kubernetes definidos por manifesto.
É um objeto do kubernetes que representa uma instancia da sua aplicação sendo implementada no ambiente.

- Application Source Type:
   O argo suporta diferentes tipos de origem para buscar os arquivos YAML e
   configurar o deploy. podemos buscar outras fontes:
   tools:
      -> Kustomaze.

      -> Helm.

      -> Directory:  (.repositorio/arquivos/cruze);
            -> YAML.
            -> JSON.
            -> Jsonet.

         Plugins:
         Temos a opção de instalar alguns plugins no ArgoCD, qualquer ferramenta de 
         gerenciamento de configuração. configurações como um plugin;

         -> Configuration management Plugins.
         -> Configuration management Tools.

-> Iremos falar de 02 (Target State, Live State):
-------------------------------------------------------------------------------------------------
Target State:

Como os recursos deveriam ser implementados, o que esta no Git.

- O estado desejado de um aplicativo, conforme
 representado por arquivos em um repositorio git.

- O ArgoCD compara o estado atual dos recursos implantados
 no cluster com o estado de destino (target state).

 Live State:

 O que e o Live State:

---------------------------------------------------------------------------------------------------
-> Boas Praticas:
---------------------------------- End File Introduction ArgoCD and GitOps ------------------------